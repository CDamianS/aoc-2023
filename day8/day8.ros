#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '() :silent t))

(defpackage :ros.script.day8.3911005871 (:use :cl))
(in-package :ros.script.day8.3911005871)

(defvar *input* (uiop:read-file-lines "input.txt"))
(defvar *dirs* (car *input*))
(defvar *section* (cddr *input*))

(defun line-parser (line)
  (let ((label (subseq line 0 3))
        (left (subseq line 7 10))
        (right (subseq line 12 15)))
    (cons label (list :L left :R right))))

(defvar *graph* (mapcar #'line-parser *section*))

(defun get-elements (label graph)
  (cdr (assoc label graph :test #'string=)))

(defun find-loc (loc dir)
  (let ((element (get-elements loc *graph*)))
    (if (char= dir #\L)
        (cadr element)
        (elt element 3))))

(defun find-dest (loc graph dirs steps)
  (let* ((dir (if (zerop (length dirs))
                  (char *dirs* 0)
                  (char dirs 0)))
         (next-dirs (if (zerop (length dirs))
                        *dirs*
                        (subseq dirs 1))))
    (if (string= loc "ZZZ")
        (format t "steps: ~A" steps)
        (find-dest (find-loc loc dir) graph next-dirs (1+ steps)))))
