#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#

(progn (ros:ensure-asdf) #+quicklisp(ql:quickload '("split-sequence") :silent t))
(defpackage :day9 (:use :cl))
(in-package :day9)

(defvar *input* (uiop:read-file-lines "input.txt"))
(defvar *data* (mapcar (lambda (x)
                         (mapcar #'parse-integer (split-sequence:split-sequence #\Space x)))
                       *input*))

(defun part-one (lst)
  "Recursively finds next"
  (if lst
      (let ((diffs (mapcar #'- (cdr lst) lst)))
        (+ (car (last lst)) (part-one diffs)))
      0))

(defun part-two (lst)
  (if lst
      (let ((diffs (mapcar #'- (cdr lst) lst)))
        (- (car lst) (part-two diffs)))
      0))

(defun main ()
  (format t "Part 1: ~A~%Part 2: ~A"
          (apply #'+ (mapcar #'part-one *data*))
          (apply #'+ (mapcar #'part-two *data*))))
;;; vim: set ft=lisp lisp:
